"use strict";define("flags",function(){var a={};var t;var o;var e;a.showFlagModal=function(a){app.parseAndTranslate("partials/modals/flag_modal",a,function(l){t=$(l);t.on("hidden.bs.modal",function(){t.remove()});o=t.find("#flag-post-commit");e=t.find("#flag-reason-custom");t.on("click",".flag-reason",function(){var t=$(this).text();if(e.val().length===0){return i(a.type,a.id,t)}bootbox.confirm({title:"[[flags:modal-submit-confirm]]",message:'<p>[[flags:modal-submit-confirm-text]]</p><p class="help-block">[[flags:modal-submit-confirm-text-help]]</p>',callback:function(o){if(o){i(a.type,a.id,t)}}})});o.on("click",function(){i(a.type,a.id,t.find("#flag-reason-custom").val())});t.on("click",".toggle-custom",function(){e.prop("disabled",false);e.focus()});t.modal("show");$(window).trigger("action:flag.showModal",{modalEl:t,type:a.type,id:a.id});t.find("#flag-reason-custom").on("keyup blur change",n)})};function i(a,o,e){if(!a||!o||!e){return}var i={type:a,id:o,reason:e};socket.emit("flags.create",i,function(a,o){if(a){return app.alertError(a.message)}t.modal("hide");app.alertSuccess("[[flags:modal-submit-success]]");$(window).trigger("action:flag.create",{flagId:o,data:i})})}function n(){if(t.find("#flag-reason-custom").val()){o.removeAttr("disabled")}else{o.attr("disabled",true)}}return a});
//# sourceMappingURL=flags.js.map