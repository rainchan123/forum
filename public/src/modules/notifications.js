"use strict";define("notifications",["translator","components","navigator","benchpress","tinycon"],function(t,a,n,e,i){var o={};var r={};o.loadNotifications=function(n){socket.emit("notifications.get",null,function(e,i){if(e){return app.alertError(e.message)}var r=i.unread.concat(i.read).sort(function(t,a){return parseInt(t.datetime,10)>parseInt(a.datetime,10)?-1:1});t.toggleTimeagoShorthand(function(){for(var e=0;e<r.length;e+=1){r[e].timeago=$.timeago(new Date(parseInt(r[e].datetime,10)))}t.toggleTimeagoShorthand();app.parseAndTranslate("partials/notifications_list",{notifications:r},function(t){n.html(t);n.off("click").on("click","[data-nid]",function(t){var n=$(this);if(f(n)){t.stopPropagation();t.preventDefault();a.get("notifications/list").dropdown("toggle")}var e=n.hasClass("unread");if(!e){return}var i=n.attr("data-nid");s(i,true)});a.get("notifications").on("click",".mark-all-read",o.markAllRead);n.on("click",".mark-read",function(){var t=$(this).parent();var a=t.hasClass("unread");var n=t.attr("data-nid");s(n,a,function(){t.toggleClass("unread")});return false})})})})};o.onNewNotification=function(t){if(ajaxify.currentPage==="notifications"){ajaxify.refresh()}socket.emit("notifications.getCount",function(t,a){if(t){return app.alertError(t.message)}o.updateNotifCount(a)});if(!r[t.nid]){r[t.nid]=true}};function s(t,a,n){socket.emit("notifications.mark"+(a?"Read":"Unread"),t,function(e){if(e){return app.alertError(e.message)}if(a&&r[t]){delete r[t]}if(n){n()}})}function f(t){var e=t.attr("data-pid");var i=t.attr("data-path");var o=a.get("post","pid",e);if(i.startsWith(config.relative_path+"/post/")&&e&&o.length&&ajaxify.data.template.topic){n.scrollToIndex(o.attr("data-index"),true);return true}return false}o.updateNotifCount=function(t){var n=a.get("notifications/icon");t=Math.max(0,t);if(t>0){n.removeClass("fa-bell-o").addClass("fa-bell")}else{n.removeClass("fa-bell").addClass("fa-bell-o")}n.toggleClass("unread-count",t>0);n.attr("data-content",t>99?"99+":t);var e={count:t,updateFavicon:true};$(window).trigger("action:notification.updateCount",e);if(e.updateFavicon){i.setBubble(t>99?"99+":t)}};o.markAllRead=function(){socket.emit("notifications.markAllRead",function(t){if(t){app.alertError(t.message)}r={}})};return o});
//# sourceMappingURL=notifications.js.map